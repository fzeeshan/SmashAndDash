<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//name = choose("loyd", "wolf","yusu");
//scr_update_sprite();
//team1_names = array("yusu");
scr_showNotification("Joined game world!");
if global.game_mode == GM_LAN_MLT_PLYR{
    //create our player randomly in the room
    p = instance_create(random(room_width - 60) + 30, random(room_height - 60) + 30, obj_localplayer_test);
    p.name = global.characterName;
    p.playerId = global.playerId;
    with(p){
        scr_ini();
        scr_update_sprite();
        scr_ini_moves();
        scr_ini_stats();
    }
    //tell the server we're joining a game
    buffer_seek(global.buffer, buffer_seek_start, 0);
    buffer_write(global.buffer, buffer_u8, 6);
    buffer_write(global.buffer, buffer_u32, global.playerId);
    buffer_write(global.buffer, buffer_string, global.playerName);
    buffer_write(global.buffer, buffer_string, global.characterName);
    network_send_packet(obj_controller.socket, global.buffer, buffer_tell(global.buffer));
}else if global.game_mode == GM_SNGL_PLYR{
    if global.team1_names[0] == ""{
        exit;
    }
    global.team2_names = array("yusu");
    //global.team3_names = array(RANDOM_NAME());
    var team1 = instance_create(96,32,TEAM);
    var team2 = instance_create(room_width/2,32,TEAM);
    //var team3 = instance_create(room_width-96,32,TEAM);
    team1.name = "TEAM 1";
    team2.name = "TEAM 2";
    //team3.name = "TEAM 3"
    scr_spawn_boss("dragon",obj_the_boss, obj_spawnpoint3, team2);
    team1 = scr_spawn_players(global.team1_names,obj_player, obj_spawnpoint1, team1);
    team2 = scr_spawn_players(global.team2_names,obj_enemy, obj_spawnpoint2,team2);
    //team3 = scr_spawn_players(global.team3_names,obj_enemy, obj_spawnpoint3,team3);
    global.comittee = instance_create(room_width/2,100,GAME_CONTROLLER);
    global.comittee.teams = array(team1.id,team2.id);//,team3.id);
}
/*
if global.team1_names[0] == ""{
    exit;
}
global.team2_names = array("wolf", "wolf");
//global.team3_names = array(RANDOM_NAME());
var team1 = instance_create(96,32,TEAM);
var team2 = instance_create(room_width/2,32,TEAM);
//var team3 = instance_create(room_width-96,32,TEAM);
team1.name = "TEAM 1";
team2.name = "TEAM 2";
//team3.name = "TEAM 3";

team1 = scr_spawn_player(global.team1_names,obj_player, obj_spawnpoint1, team1);
team2 = scr_spawn_player(global.team2_names,obj_enemy, obj_spawnpoint2,team2);
//team3 = scr_spawn_player(global.team3_names,obj_enemy, obj_spawnpoint3,team3);
global.comittee = instance_create(25,25,GAME_CONTROLLER);
global.comittee.teams = array(team1.id,team2.id,team3.id);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
